
# |<-- Preferably using up to 50 chararacters -->|<------------------->|
# <type>: (If applied, this commit will...) <subject> (Max 50 char)
# Example:
# feat: Implement automated commit messages
# Explain why this change is being made
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|

# Provide links or keys to any relevant tickets, articles or other resources
# Example: Github issue #23

# --- COMMIT END ---
# Tag can be 
#    feat     (new feature)
#    fix      (bug fix)
#    refactor (refactoring production code)
#    style    (formatting, missing semi colons, etc; no code change)
#    doc      (changes to documentation)
#    test     (adding or refactoring tests; no production code change)
#    chore    (updating grunt tasks etc; no production code change)
#    version  (version bump/new release; no production code change)
#    dbg      (Changes in debugging code/frameworks; no production code change)
#    progress (Work In Progress; for intermediate commits to keep patches reasonably sized)
#    defaults (changes default options)
# --------------------
# Remember to:
#   * Capitalize the subject line
#   * Use the imperative mood in the subject line
#   * Do not end the subject line with a period
#   * Separate subject from body with a blank line
#   * Use the body to explain what and why vs. how
#   * Can use multiple lines with "-" or "*" for bullet points in body

# Based on:
# https://gist.github.com/adeekshith/cd4c95a064977cdc6c50
# --------------------
# -- Generic Commit Messages --
# Initial commit
# Add LICENCE
# Add README.md
# Update Main Readme
